import { InlineKeyboard } from 'grammy';
import { AppConversation, IAppContext } from '../../context/context.interface';
import { Collection, ObjectId } from 'mongodb';
import { Product } from 'src/common/integrations/mongodb/mongodb.interfaces';
import { ParseModeFlavor } from '@grammyjs/parse-mode';

export const updateProductScene = (products: Collection<Product>) => {
  const { format } = new Intl.DateTimeFormat('ru', {
    weekday: 'long',
    year: 'numeric',
    month: 'numeric',
    day: 'numeric',
    hour: 'numeric',
    minute: 'numeric',
    second: 'numeric',
  });

  return async function (
    conversation: AppConversation,
    ctx: ParseModeFlavor<IAppContext>,
  ) {
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ id —Ç–æ–≤–∞—Ä–∞');
    const id = await conversation.form.text();

    try {
      const result = await products.findOne({ _id: new ObjectId(id) });

      if (result) {
        ctx.session.selectedProdutId = new ObjectId(id);

        await ctx.replyWithPhoto('https://api.3hundred.ru/' + result.preview, {
          caption: `
<b>id:</b> ${result._id}
<b>–¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</b> ${format(result.created_at)}
<b>–¢–∏–ø:</b> ${result.type}
<b>–ë—Ä–µ–Ω–¥:</b> ${result.brand}
<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${result.title}
<b>–†–∞–∑–º–µ—Ä–Ω–∞—è —Å–µ—Ç–∫–∞:</b> ${result.size_grid}

${result.status.is_hidden ? '‚ùå' : '‚úÖ'}: <b>–°—Ç–∞—Ç—É—Å "–°–∫—Ä—ã—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"</b>
${result.status.in_stock ? '‚úÖ' : '‚ùå'}: <b>–°—Ç–∞—Ç—É—Å "–≠–∫—Å–ø—Ä–µ—Å—Å"</b>
${result.status.is_new ? '‚úÖ' : '‚ùå'}: <b>–°—Ç–∞—Ç—É—Å "–ù–æ–≤–∏–Ω–∫–∞"</b>
${result.status.is_sale ? '‚úÖ' : '‚ùå'}: <b>–°—Ç–∞—Ç—É—Å "–ü–æ–ø—É–ª—è—Ä–Ω—ã–π"</b>

`,
          parse_mode: 'HTML',
          reply_markup: InlineKeyboard.from([
            [
              InlineKeyboard.text('üîô', 'products'),
              InlineKeyboard.text('üóë ', `product-delete`),
            ],
            [
              InlineKeyboard.text('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', `product-description`),
              InlineKeyboard.text('–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏', `product-photos`),
            ],
            [
              InlineKeyboard.text('–°—Ç–∞—Ç—É—Å—ã', `product-statuses`),
              InlineKeyboard.text('–†–∞–∑–º–µ—Ä—ã', `product-sizes`),
            ],
          ]),
        });
      } else {
        await ctx.reply('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      }
    } catch (err) {
      console.log(err);
      await ctx.reply(`–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ!`);
    }
  };
};
